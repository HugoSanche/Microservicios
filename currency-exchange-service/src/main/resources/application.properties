spring.application.name=currency-exchange
server.port=8000

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

eureka.instance.prefer-ip-address=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#Elimina error Eureka conecction refused
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false



#------------------------------------------------------------------------------------------

#Lo siguiente es para temas de resilencia por si un servicio se cae por un instante, vuelva a esperar y despues realice otro intento
#las veces que revisara si la api esta caida
resilience4j.retry.instances.sample-apiX.maxAttempts=5
#en cada intento espera un segundo
resilience4j.retry.instances.sample-apiX.waitDuration=1s
#exponential increse time wait to retrieve another request.- Is useful in the cloud like amazon
resilience4j.retry.instances.sample-apiX.enableExponentialBackoff=true 

#------------------------------------------------------------------------------------------


#no esta en el codigo
#spring.jpa.defer-datasource-initialization=true
spring.config.import=optional:configserver:http://localhost:8888


logging.level.org.springframework = INFO
